services:
  reverse_proxy:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "8880:80"
      - "8881:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/certs:/etc/letsencrypt:ro
      - ./nginx/html:/usr/share/nginx/html
    environment:
      - DOMAIN=${DOMAIN:-example.com}
    depends_on:
      - dashboard
      - web_portal
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certs:/etc/letsencrypt
      - ./nginx/html:/usr/share/nginx/html
    entrypoint: >
      certbot certonly --webroot
      --webroot-path=/usr/share/nginx/html
      --email ${CERTBOT_EMAIL}
      --agree-tos
      --no-eff-email
      --staging
      -d ${DOMAIN} || echo "Certificate generation skipped - development environment"
    restart: "no"

  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: mlflow
    ports:
      - "5000:5000"
    volumes:
      - mlflow_data:/mlflow
      - postgres_data:/var/lib/postgresql/data:ro
      - shared_data:/shared_data
    environment:
      - MLFLOW_TRACKING_URI=${DATABASE_URL}
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri ${DATABASE_URL}
      --default-artifact-root /shared_data/mlflow_artifacts
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    depends_on:
      - postgres

  tensorboard:
    image: python:3.9-slim
    container_name: tensorboard
    ports:
      - "6006:6006"
    volumes:
      - tensorboard_logs:/logs
      - postgres_data:/var/lib/postgresql/data:ro
    command: >
      bash -c "pip install tensorboard>=2.9.0 && 
      python -m tensorboard.main 
      --logdir=/logs 
      --host=0.0.0.0 
      --port=6006"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6006"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  vector_db:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: chroma
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/data
      - postgres_data:/var/lib/postgresql/data:ro
      - shared_data:/shared_data
    environment:
      - IS_PERSISTENT=true
      - PERSIST_DIRECTORY=/data
      - DATABASE_URL=${DATABASE_URL}
    restart: unless-stopped

  label_studio:
    image: heartexlabs/label-studio:latest
    container_name: label_studio
    ports:
      - "8081:8081"
    volumes:
      - label_studio_data:/label-studio/data
      - postgres_data:/var/lib/postgresql/data:ro
      - shared_data:/shared_data
    environment:
      - LABEL_STUDIO_LOCAL_FILES_SERVING_ENABLED=${LABEL_STUDIO_LOCAL_FILES_SERVING_ENABLED}
      - LABEL_STUDIO_HOST=${LABEL_STUDIO_HOST}
      - LABEL_STUDIO_PORT=${LABEL_STUDIO_PORT}
      - LABEL_STUDIO_API_KEY=${LABEL_STUDIO_API_KEY}
      - DATABASE_URL=${DATABASE_URL}
    command: >
      label-studio start
      --port ${LABEL_STUDIO_PORT}
      --host ${LABEL_STUDIO_HOST}
    restart: unless-stopped
    depends_on:
      - postgres

  great_expectations:
    build:
      context: ./great_expectations
      dockerfile: Dockerfile
    container_name: great_expectations
    ports:
      - "4000:4000"
    volumes:
      - great_expectations_data:/app/great_expectations
      - postgres_data:/var/lib/postgresql/data:ro
      - shared_data:/shared_data
    working_dir: /app/great_expectations
    environment:
      - DATABASE_URL=${DATABASE_URL}
    command: >
      /bin/bash -c "
      which great_expectations || pip install great_expectations &&
      great_expectations docs build || mkdir -p uncommitted/data_docs/local_site &&
      cd uncommitted/data_docs/local_site &&
      python3 -m http.server 4000 --bind 0.0.0.0
      "
    restart: unless-stopped

  dashboard:
    container_name: dashboard
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    volumes:
      - ./dashboard:/app
      - postgres_data:/var/lib/postgresql/data:ro
      - shared_data:/shared_data
    environment:
      - DATABASE_URL=${DATABASE_URL}
    command: streamlit run app.py --server.port=9000 --server.address=0.0.0.0
    restart: unless-stopped

  web_portal:
    container_name: web_portal
    build:
      context: ./web_portal
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    volumes:
      - ./web_portal:/app
      - postgres_data:/var/lib/postgresql/data:ro
      - shared_data:/shared_data
    environment:
      - DATABASE_URL=${DATABASE_URL}
    command: uvicorn main:app --host 0.0.0.0 --port 9090
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  gitea:
    image: docker.gitea.com/gitea:1.23.8
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__server__ROOT_URL=http://localhost:8880/gitea/
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=postgres:5432
      - GITEA__database__NAME=mlpi_db
      - GITEA__database__USER=mlpi
      - GITEA__database__PASSWD=mlpi_pass
    depends_on:
      - postgres
    restart: always
    ports:
      - "3000:3000"
      - "222:22"
    volumes:
      - gitea_data:/data
      - postgres_data:/var/lib/postgresql/data:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      - POSTGRES_USER=mlpi
      - POSTGRES_PASSWORD=mlpi_pass
      - POSTGRES_DB=mlpi_db
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  mlflow_data:
  tensorboard_logs:
  chroma_data:
  label_studio_data:
  great_expectations_data:
  gitea_data:
  postgres_data:
  shared_data:

networks:
  default:
    driver: bridge
