# .env.example - Environment Variables for ML Platform Suite

This file lists all environment variables required to configure and deploy the ML platform components. Copy it to `.env` and fill in your values.

---

## 1. LABEL STUDIO SETTINGS

### 1.1 Authentication

# Generate an API token in Label Studio:

# 1. Start Label Studio locally: `label-studio start`

# 2. Open [http://localhost:8080](http://localhost:8080) in your browser

# 3. Click your user avatar → Account Settings → API Tokens → Create new token

# 4. Copy the token value and paste below.

LABEL_STUDIO_API_KEY=your_label_studio_api_key_here

### 1.2 Host Binding

# Address and port Label Studio listens on (inside Docker)

LABEL_STUDIO_HOST=0.0.0.0
LABEL_STUDIO_PORT=8081

### 1.3 Database (Optional Postgres)

# By default, Label Studio uses SQLite. To use PostgreSQL:

# a) Provision a Postgres server, create database and user:

# psql -U postgres -c "CREATE DATABASE labelstudio;"

# psql -U postgres -c "CREATE USER ls_user WITH PASSWORD 'ls_password';"

# psql -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE labelstudio TO ls_user;"

# b) Uncomment and set these:

#LABEL_STUDIO_DB_ENGINE=postgresql
#LABEL_STUDIO_DB_HOST=postgres
#LABEL_STUDIO_DB_PORT=5432
#LABEL_STUDIO_DB_NAME=labelstudio
#LABEL_STUDIO_DB_USER=ls_user
#LABEL_STUDIO_DB_PASSWORD=ls_password

### 1.4 Local File Serving

# Enable Label Studio to serve files mounted in `/label-studio/data`

LABEL_STUDIO_LOCAL_FILES_SERVING_ENABLED=true

---

## 2. MLFLOW TRACKING SERVER

# The URI clients (your code, dashboard) use to reach MLflow

# Default points at Docker Compose service name on port 5000

MLFLOW_TRACKING_URI=http://mlflow:5000

---

## 3. VECTOR DATABASE

# Host and port of your embedding store (ChromaDB or Qdrant)

VECTOR_DB_HOST=vector_db
VECTOR_DB_PORT=8000

---

## 4. SSL / CERTBOT

# Email for Let's Encrypt certificate registration and renewal notices

CERTBOT_EMAIL=you@example.com

---

## 5. DOCKER COMPOSE OVERRIDES (Optional)

# Override Docker Compose project name (avoids name collisions)

#COMPOSE_PROJECT_NAME=ml_platform

---

## 6. POSTGRESQL DATABASE

# PostgreSQL connection URL

DATABASE_URL=postgresql://mlpi:mlpi_pass@postgres:5432/mlpi_db

---

## 7. NGINX REVERSE PROXY

# Domain for Nginx reverse proxy

DOMAIN=example.com

---

# How to use:

# 1. Copy this template: `cp .env.example .env`

# 2. Open `.env` and replace placeholder values.

# 3. Run your deployment scripts:

# ./scripts/setup_environment.sh
